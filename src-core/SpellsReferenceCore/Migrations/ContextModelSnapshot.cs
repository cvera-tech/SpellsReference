// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpellsReferenceCore.Data;

namespace SpellsReferenceCore.Migrations
{
    [DbContext(typeof(SpellsReferenceContext))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpellsReferenceCore.Data.Models.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CastingTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ritual")
                        .HasColumnType("bit");

                    b.Property<int>("School")
                        .HasColumnType("int");

                    b.Property<bool>("Somatic")
                        .HasColumnType("bit");

                    b.Property<int?>("SpellbookId")
                        .HasColumnType("int");

                    b.Property<bool>("Verbal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SpellbookId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("SpellsReferenceCore.Data.Models.Spellbook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Spellbooks");
                });

            modelBuilder.Entity("SpellsReferenceCore.Data.Models.SpellbookSpell", b =>
                {
                    b.Property<int>("SpellbookId")
                        .HasColumnType("int");

                    b.Property<int>("SpellId")
                        .HasColumnType("int");

                    b.HasKey("SpellbookId", "SpellId");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellbookSpell");
                });

            modelBuilder.Entity("SpellsReferenceCore.Data.Models.Spell", b =>
                {
                    b.HasOne("SpellsReferenceCore.Data.Models.Spellbook", null)
                        .WithMany("Spells")
                        .HasForeignKey("SpellbookId");
                });

            modelBuilder.Entity("SpellsReferenceCore.Data.Models.SpellbookSpell", b =>
                {
                    b.HasOne("SpellsReferenceCore.Data.Models.Spell", "Spell")
                        .WithMany()
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpellsReferenceCore.Data.Models.Spellbook", "Spellbook")
                        .WithMany()
                        .HasForeignKey("SpellbookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
